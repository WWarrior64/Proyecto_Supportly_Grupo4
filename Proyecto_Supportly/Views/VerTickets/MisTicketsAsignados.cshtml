@using System.Collections.Generic

@{
    ViewData["Title"] = "Mis Tickets Asignados";

    // Datos que cargó el controlador:
    var ticketsAsignados = ViewBag.TicketsAsignados as List<dynamic>;
    var selectedTicket = ViewBag.SelectedTicket as dynamic;
    var nombreUsuario = ViewBag.NombreUsuario as string;
    var comentarios = ViewBag.Comentarios as List<dynamic>;
    var esAdmin = (bool)(ViewBag.EsAdministrador ?? false);
    var estadosList = ViewBag.EstadosList as Microsoft.AspNetCore.Mvc.Rendering.SelectList;
    var sessionUserId = (int)(ViewBag.SessionUserId ?? 0);
}

<style>
    /* Fondo morado lila SOLO para esta vista */
    body {
        background-color: #e6e6fa !important;
    }

    .card {
        border-radius: .75rem;
        border: 1px solid #dee2e6;
        box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .075);
    }

    .badge-urgencia-alta {
        background-color: #dc3545;
        color: #fff;
    }

    .badge-urgencia-media {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-urgencia-baja {
        background-color: #17a2b8;
        color: #fff;
    }

    .card-text strong {
        color: #343a40;
    }

    .ticket-list-item {
        cursor: pointer;
        padding: 0.75rem 1rem;
        border-bottom: 1px solid #dee2e6;
        transition: background-color 0.2s ease;
    }

    .ticket-list-item:hover {
        background-color: #f8f9fa;
    }

    .ticket-list-item.selected {
        background-color: #e9ecef;
        font-weight: bold;
    }

    .description-panel {
        background-color: #fff;
        padding: 1.5rem;
        border: 1px solid #dee2e6;
        border-radius: .75rem;
        box-shadow: 0 .125rem .25rem rgba(0, 0, 0, .05);
        min-height: 200px;
    }

    .description-panel h5 {
        color: #007bff;
        margin-bottom: 1rem;
    }

    .comments-section {
        margin-top: 1.5rem;
        padding-top: 1rem;
        border-top: 1px solid #eee;
    }

    .comment-item {
        background-color: #f8f9fa;
        border-radius: .5rem;
        padding: .75rem;
        margin-bottom: .75rem;
        border: 1px solid #e9ecef;
    }

    .comment-item small {
        display: block;
        color: #6c757d;
        margin-top: .25rem;
    }
</style>

<div class="container mt-4">
    <div class="row">
        <!-- Columna izquierda: lista de tickets -->
        <div class="col-md-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        @if (esAdmin)
                        {
                            @:Tickets
                        }
                        else
                        {
                            @:Tickets Asignados a @nombreUsuario
                        }
                    </h4>
                    <a href="@Url.Action("HistorialTickets", "VerTickets")" class="btn btn-light btn-sm">
                        <i class="bi bi-clock-history me-1"></i> Historial
                    </a>
                </div>
                <div class="card-body p-0">
                    @if (ticketsAsignados == null || !ticketsAsignados.Any())
                    {
                        <p class="p-3 mb-0 text-muted">
                            No hay tickets para mostrar.
                        </p>
                    }
                    else
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var ticket in ticketsAsignados)
                            {
                                string prioridadClass = ticket.Prioridad switch
                                {
                                    "Alta" => "badge-urgencia-alta",
                                    "Media" => "badge-urgencia-media",
                                    "Baja" => "badge-urgencia-baja",
                                    _ => "bg-secondary"
                                };

                                bool esSeleccionado = (selectedTicket != null && ticket.TicketID == selectedTicket.TicketID);
                                string itemCss = esSeleccionado
                                ? "ticket-list-item selected"
                                : "ticket-list-item";

                                <a href="@Url.Action("MisTicketsAsignados", "VerTickets", new { ticketId = ticket.TicketID })"
                                   class="list-group-item list-group-item-action @itemCss">
                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                        <h6 class="mb-1 text-dark">@ticket.Titulo</h6>
                                        <small class="badge @prioridadClass">@ticket.Prioridad</small>
                                    </div>
                                    <small class="text-muted">
                                        Creado por: <strong>@ticket.NombreCreador</strong>
                                    </small>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Columna derecha: detalle del ticket seleccionado y comentarios -->
        <div class="col-md-8">
            <div id="ticket-description-panel" class="description-panel">
                @if (selectedTicket == null)
                {
                    <h5 class="text-muted">
                        Selecciona un ticket para ver los detalles
                    </h5>
                    <p class="text-muted">
                        Aquí aparecerá la descripción, estado, prioridad y comentarios del ticket.
                    </p>
                }
                else
                {
                    string prioridadClassSel = selectedTicket.Prioridad switch
                    {
                        "Alta" => "badge-urgencia-alta",
                        "Media" => "badge-urgencia-media",
                        "Baja" => "badge-urgencia-baja",
                        _ => "bg-secondary"
                    };

                    <h5 class="card-title text-primary">
                        Ticket #@selectedTicket.TicketID: @selectedTicket.Titulo
                    </h5>

                    @* — Botón “Ver Detalles Completos” para Administrador — *@
                    @if (esAdmin)
                    {
                        <a href="@Url.Action("Details", "Asignacion", new { id = selectedTicket.TicketID })"
                           class="btn btn-sm btn-warning mb-3">
                            <i class="bi bi-gear-fill me-1"></i> Ver Detalles Completos
                        </a>
                    }
                    else
                    {
                        @* — Botón “Ir al Chat” para empleado/técnico — *@
                        <a href="@Url.Action("Chat", "TicketChat", new { id = selectedTicket.TicketID, userId = sessionUserId })"
                           class="btn btn-sm btn-info mb-3">
                            <i class="bi bi-chat-dots me-1"></i> Ir al Chat
                        </a>
                    }

                    <p class="card-text mb-1">
                        <strong>Descripción:</strong><br />
                        @Html.Raw(
                                 ((string)selectedTicket.Descripcion)?.Replace("\r\n", "<br />")
                                 ?? "Sin descripción"
                                 )
                    </p>
                    <p class="card-text mb-1">
                        <strong>Prioridad:</strong>
                        <span class="badge @prioridadClassSel">
                            @selectedTicket.Prioridad
                        </span>
                    </p>
                    <p class="card-text mb-1 d-flex align-items-center">
                        <strong class="me-2">Estado actual:</strong>
                        @selectedTicket.EstadoNombre
                    </p>

                    <p class="card-text mb-1 d-flex align-items-center">
                        <strong class="me-2">Cambiar Estado A:</strong>
                        @* Dropdown para cambiar estado *@
                        <form asp-action="UpdateStatus"
                              asp-controller="VerTickets"
                              method="post"
                              style="display:inline-block;"
                              class="mb-0">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="ticketId" value="@selectedTicket.TicketID" />

                            @Html.DropDownList(
                                     "newEstadoID",
                                     estadosList,
                                     new
                                     {
                                         @class = "form-control form-select form-select-sm",
                                         onchange = "this.form.submit()"
                                     }
                                     )
                        </form>
                    </p>
                    <p class="card-text mb-1">
                        <strong>Creado por:</strong> <strong>@selectedTicket.NombreCreador</strong>
                    </p>
                    <p class="card-text mb-2">
                        <strong>Fecha de Creación:</strong>
                        @(((DateTime)selectedTicket.FechaCreacion).ToString("dd/MM/yyyy HH:mm"))
                    </p>
                    <p class="card-text mb-2">
                        <strong>Fecha de Cierre:</strong>
                        @{
                            // Aquí comprobamos que FechaCierre no sea null antes de formatear
                            var cierre = (DateTime?)selectedTicket.FechaCierre;
                            if (cierre.HasValue)
                            {
                                @cierre.Value.ToString("dd/MM/yyyy HH:mm")
                            }
                            else
                            {
                                <em>No disponible</em>
                            }
                        }
                    </p>

                    <hr />

                    <div class="comments-section">
                        <h6>Comentarios:</h6>
                        @if (comentarios != null && comentarios.Any())
                        {
                            @foreach (var comment in comentarios)
                            {
                                <div class="comment-item">
                                    <p class="mb-0">@comment.Contenido</p>
                                    <small>
                                        <strong>@(comment.Usuario ?? "Usuario Desconocido")</strong> -
                                        @(((DateTime)comment.FechaComentario).ToString("dd/MM/yyyy HH:mm"))
                                    </small>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">No hay comentarios para este ticket.</p>
                        }
                    </div>

                    @* Solo Administrador ve el área para agregar comentario *@
                    @if (esAdmin)
                    {
                        <hr />
                        <h6>Agregar comentario (solo Administrador):</h6>
                        <form asp-action="AddComment"
                              asp-controller="VerTickets"
                              method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="ticketId" value="@selectedTicket.TicketID" />
                            <div class="mb-2">
                                <textarea name="contenido"
                                          class="form-control"
                                          rows="3"
                                          placeholder="Escribe tu comentario..."
                                          required></textarea>
                            </div>
                            <button type="submit" class="btn btn-sm btn-success">
                                <i class="bi bi-plus-circle me-1"></i> Enviar comentario
                            </button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />
}